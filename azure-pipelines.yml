# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  Major: '0'
  Minor: '3'
  Revision: $(Build.BuildNumber)
  BuildProject: 'Generic.ViewModels/Generic.ViewModels.csproj'
  TestProject: 'Generic.ViewModels.Tests/Generic.ViewModels.Tests.csproj'
  
# - name: version.MajorMinor
#   value: '0.3'
# - name: version.Revision
#   value: $[counter(variables['version.MajorMinor'], 0)]
# - name: versionNumber
#   value: '$(version.MajorMinor).$(version.Revision)'
# - name: BuildProject
#   value: 'Generic.ViewModels/Generic.ViewModels.csproj'
# - name: TestProject
#   value: 'Generic.ViewModels.Tests/Generic.ViewModels.Tests.csproj'
# - name: myx
#   value: '1.0.0-CI-$(Build.BuildNumber)'

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo 'building revision $(Revision)' # echo

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: $(BuildProject)
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'test'
#     projects: 'Generic.ViewModels.Tests/Generic.ViewModels.Tests.csproj'
#    testRunTitle: 'test generic.viewmodels'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: $(BuildProject)
#    versioningScheme: 'byBuildNumber'
# '(BuildDefinitionName)_(Year:yyyy).(Month).(Month).(DayOfMonth)$(Rev:.r)'.

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- publish: '$(Build.ArtifactStagingDirectory)'
  artifact: 
